###############################################################################
# CONFIGURATION FILE FOR LET'S ENCRYPT CLIENT                                 #
# We use it to automatically and regularly generate new SSL certificates      #
###############################################################################
#
# Sources:
# https://letsencrypt.readthedocs.org/en/latest/using.html#configuration-file
# https://github.com/letsencrypt/letsencrypt/blob/master/examples/cli.ini
# https://github.com/letsencrypt/letsencrypt/blob/master/examples/dev-cli.ini
#
# Help for letsencrypt client: ./letsencrypt -h all
#
# LAST CHECK/UPDATE: 12/2015
#
###############################################################################

# RSA key size. MUST be >= 2048.
# Possible values: 2048, 3072, 4096.
# Info on decision which size to use:
# http://www.keylength.com
# http://danielpocock.com/rsa-key-sizes-2048-or-4096-bits
# https://en.wikipedia.org/wiki/Key_size#Asymmetric_algorithm_key_lengths
#
# Currently, 2048 bits are fully sufficient.
# Status: OK
rsa-key-size = 2048

# Select which certificate server to use. Possible values:
# https://acme-v01.api.letsencrypt.org/directory        <-- Production server        (use this one)
# https://acme-staging.api.letsencrypt.org/directory    <-- Staging (testing) server (do NOT use this one)
#
# You can see server list here: https://letsencrypt.status.io/
# Normally, we always use production server.
# We CAN, however, use staging server for testing purposes, but issued certificates
# will NOT be trusted - so it is really just for testing purposes.
# Status: CONST
server = https://acme-v01.api.letsencrypt.org/directory

# Email used for registration and recovery contact.
# This email is only used when creating an account with the ACME server, which is one
# of the first things the client does. Once you've had a successful run with letsencrypt and
# this account has been created, the --email flag has no effect.
# More info here: https://community.letsencrypt.org/t/clarify-the-email-flag-requirements/2603
# This email is used in the event of key loss or account compromise.
# It is also used for receiving notice about impending
# expiration of revocation of your certificates.
# In future it should be possible to change email, see here:
# https://community.letsencrypt.org/t/clarify-the-email-flag-requirements/2603/7
# Status: CHECK/MAYBE_OK
email = info@cruncher.ch

# Uncomment to use a text interface instead of ncurses
# I don't like ncurses. Let's use hardcore text mode instead :-)
# Status: OK
text = True

# Uncomment to use the standalone authenticator on port 443
# We do NOT use standalone authenticator. We use webroot authenticator instead.
# Leave those line commented.
# authenticator = standalone
# standalone-supported-challenges = tls-sni-01

# Uncomment to use the webroot authenticator. Replace webroot-path with the
# path to the public_html / webroot folder being served by your web server.
# We use ONLY webroot authenticator, and we use special directory for it.
# In Nginx config, we redirect /.well-known/acme-challenge to this directory.
# To make it work, just create empty directory here:
# /var/www/specialfiles/letsencrypt/.well-known/acme-challenge/
# And make a location section in you Nginx config which will point to this directory.
authenticator = webroot
webroot-path  = /var/tmp/letsencrypt-auto


###############################################################################
# Additional parameters from here:
# https://github.com/letsencrypt/letsencrypt/blob/master/examples/dev-cli.ini
###############################################################################

# List of domains for which the certificate will be generated.
# We specify domains in the command line, so leave this empty
#domains = example.com
domains = {{project_name}}.ch,www.{{project_name}}.ch

# Used for automation. Agree to the Let's Encrypt Subscriber Agreement.
# Default: False
# Set it to true to allow automated certificate generation/retrieval.
# Status: OK
agree-tos = True
